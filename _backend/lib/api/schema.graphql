type Query {
	getGame(id: ID!): Game @aws_cognito_user_pools
	listGames: [Game]! @aws_cognito_user_pools
}

type Mutation {
	createGame(input: CreateGameInput!): Game @aws_cognito_user_pools
	updateAndPublishGameEvent(input: PublishGameEventInput!): Game
		@aws_cognito_user_pools
}

type Subscription {
	onUpdateAndPublishGameEvent: Game
		@aws_cognito_user_pools
		@aws_subscribe(mutations: ["updateAndPublishGameEvent"])
}

type Game {
	id: ID!
	createdAt: AWSDateTime!
	updatedAt: AWSDateTime!
	name: String!
	homeTeam: Team!
	awayTeam: Team!
	homeTeamScore: Int!
	awayTeamScore: Int!
	currentMessage: String!
}

type Team {
	teamId: String!
	name: String!
	picId: String!
}

input CreateGameInput {
	name: String!
	homeTeam: TeamIput!
	awayTeam: TeamIput!
}

input TeamIput {
	teamId: String!
	name: String!
	picId: String!
}

input PublishGameEventInput {
	id: String!
	homeTeamScore: Int!
	awayTeamScore: Int!
	currentMessage: String!
}
